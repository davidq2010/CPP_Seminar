////////////////////////////////////////////////////////////////////////////////
/// @file
/// @brief Use case for const qualified method in a class.
///
/// Immutability for an object, e.g., a 3D graphics model whose data should not
/// change. 
////////////////////////////////////////////////////////////////////////////////

// STL
#include <iostream>
using namespace std;

////////////////////////////////////////////////////////////////////////////////
/// @brief Example of an immutable 3D model.
////////////////////////////////////////////////////////////////////////////////
class Model3D {
  public:
    ////////////////////////////////////////////////////////////////////////////
    /// @brief Constructor
    explicit Model3D(string&& _filename) : m_filename{std::move(_filename)} {}

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Display as read-only
    void display() const { // Compiler protection that I do not change the 
                           // object.
      cout << "Filename: " << m_filename << endl;
    }
  
  private:
    string m_filename; ///< Filename
};

////////////////////////////////////////////////////////////////////////////////
/// @brief Main driver.
int
main() {
  Model3D m{"OneRing.obj"};
  m.display();
}